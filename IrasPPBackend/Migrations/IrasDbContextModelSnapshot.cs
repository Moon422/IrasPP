// <auto-generated />
using System;
using IrasPPBackend.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IrasPPBackend.Migrations
{
    [DbContext(typeof(IrasDbContext))]
    partial class IrasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IrasPPBackend.Models.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CourseCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<long>("ProgramId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Courses_T");
                });

            modelBuilder.Entity("IrasPPBackend.Models.CourseCoordinator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CourseCoordinatorTill")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("FacultyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("FacultyId");

                    b.ToTable("CourseCoordinators_T");
                });

            modelBuilder.Entity("IrasPPBackend.Models.DeanOfSchool", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeanTill")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("FacultyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("SchoolId");

                    b.ToTable("DeanOfSchools_T");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Departments_T");
                });

            modelBuilder.Entity("IrasPPBackend.Models.HeadOfDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("FacultyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("HeadTill")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.ToTable("HeadOfDepartments_T");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Program", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Programs_T");
                });

            modelBuilder.Entity("IrasPPBackend.Models.School", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("SchoolCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Schools_T");
                });

            modelBuilder.Entity("IrasPPBackend.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("HouseAddress")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users_T");

                    b.HasDiscriminator<string>("UserType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("IrasPPBackend.Models.Admin", b =>
                {
                    b.HasBaseType("IrasPPBackend.Models.User");

                    b.ToTable("Users_T");

                    b.HasDiscriminator().HasValue("UNIVERSITY_ADMIN");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Faculty", b =>
                {
                    b.HasBaseType("IrasPPBackend.Models.User");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("FacultyRoles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users_T", t =>
                        {
                            t.Property("IsActive")
                                .HasColumnName("Faculty_IsActive");
                        });

                    b.HasDiscriminator().HasValue("FACULTY");
                });

            modelBuilder.Entity("IrasPPBackend.Models.SchoolAdmin", b =>
                {
                    b.HasBaseType("IrasPPBackend.Models.User");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint");

                    b.HasIndex("SchoolId");

                    b.ToTable("Users_T");

                    b.HasDiscriminator().HasValue("SCHOOL_ADMIN");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Student", b =>
                {
                    b.HasBaseType("IrasPPBackend.Models.User");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("ProgramId")
                        .HasColumnType("bigint");

                    b.HasIndex("ProgramId");

                    b.ToTable("Users_T");

                    b.HasDiscriminator().HasValue("STUDENT");
                });

            modelBuilder.Entity("IrasPPBackend.Models.ViceChancellor", b =>
                {
                    b.HasBaseType("IrasPPBackend.Models.User");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("tinyint(1)");

                    b.ToTable("Users_T");

                    b.HasDiscriminator().HasValue("VICE_CHANCELLOR");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Course", b =>
                {
                    b.HasOne("IrasPPBackend.Models.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("IrasPPBackend.Models.CourseCoordinator", b =>
                {
                    b.HasOne("IrasPPBackend.Models.Course", "Course")
                        .WithMany("Coordinators")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IrasPPBackend.Models.Faculty", "Faculty")
                        .WithMany("CoursesCoordinated")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("IrasPPBackend.Models.DeanOfSchool", b =>
                {
                    b.HasOne("IrasPPBackend.Models.Faculty", "Faculty")
                        .WithMany("SchoolsDeaned")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IrasPPBackend.Models.School", "School")
                        .WithMany("Deans")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("School");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Department", b =>
                {
                    b.HasOne("IrasPPBackend.Models.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("IrasPPBackend.Models.HeadOfDepartment", b =>
                {
                    b.HasOne("IrasPPBackend.Models.Department", "Department")
                        .WithMany("Heads")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IrasPPBackend.Models.Faculty", "Faculty")
                        .WithMany("DepartmentsHeaded")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Program", b =>
                {
                    b.HasOne("IrasPPBackend.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Faculty", b =>
                {
                    b.HasOne("IrasPPBackend.Models.Department", "Department")
                        .WithMany("Faculties")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("IrasPPBackend.Models.SchoolAdmin", b =>
                {
                    b.HasOne("IrasPPBackend.Models.School", "School")
                        .WithMany("Admins")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Student", b =>
                {
                    b.HasOne("IrasPPBackend.Models.Program", "Program")
                        .WithMany("Students")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Course", b =>
                {
                    b.Navigation("Coordinators");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Department", b =>
                {
                    b.Navigation("Faculties");

                    b.Navigation("Heads");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Program", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("IrasPPBackend.Models.School", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Deans");
                });

            modelBuilder.Entity("IrasPPBackend.Models.Faculty", b =>
                {
                    b.Navigation("CoursesCoordinated");

                    b.Navigation("DepartmentsHeaded");

                    b.Navigation("SchoolsDeaned");
                });
#pragma warning restore 612, 618
        }
    }
}
